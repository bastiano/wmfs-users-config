#
# WMFS2 configuration file
#

# Possible file inclusion:
# @include "file"

# Multi theme section
[themes]

  [theme]
     # No name mean default
     # name = "default"

     font = "fixed"

     # Bars
     bars_width = 24
     bars_fg = "#AABBAA"
     bars_bg = "#0E1A25"

     # Element tags
     tags_normal_fg = "#264059"
     tags_normal_bg = "#0E1A25"
     tags_occupied_fg = "#7B91A6"
     tags_occupied_bg = "#0E1A25"
     tags_sel_fg = "#AABBAA"
     tags_sel_bg = "#1C2E40"
     tags_urgent_fg = "#AABBAA"
     tags_urgent_bg = "#522F20"
     tags_border_color = "#1C2E40"
     tags_border_width = 1

     # Frame / Client
     client_normal_fg = "#264059"
     client_normal_bg = "#0E1A25"
     client_sel_fg = "#AABBAA"
     client_sel_bg = "#1C2E40"
     frame_bg = "#0E1A25"
     client_titlebar_width = 16
     client_border_width = 1
     client_frame_padding = 5
     client_normal_statusline = "^s[left;#264059;[C\]](1;client_close) ^s[left;#264059;[<\]](1;tag_move_client_prev) ^s[left;#264059;[>\]](1;tag_move_client_next) ^s[left;#264059;[F\]](1;client_toggle_free)"
     client_sel_statusline = "^s[left;#7B91A6;[C\]](1;client_close) ^s[left;#7B91A6;[<\]](1;tag_move_client_prev) ^s[left;#7B91A6;[>\]](1;tag_move_client_next) ^s[left;#7B91A6;[F\]](1;client_toggle_free)"

   [/theme]

[/themes]

[tags]

  [tag] screen = 0 name = "main" [/tag]
  [tag] screen = 0 name = "www" [/tag]
  [tag] screen = 0 name = "dev" [/tag]
  [tag] screen = 0 name = "mail" [/tag]
  [tag] screen = 0 name = "music" [/tag]
  [tag] screen = 0 name = "misc" [/tag]

  # Mousebinds associated to Tags element button
  [mouse] button = "1" func = "tag_click" [/mouse]
  [mouse] button = "4" func = "tag_next"  [/mouse]
  [mouse] button = "5" func = "tag_prev"  [/mouse]


[/tags]

[client]

  [mouse] button = "1" func = "client_focus_click" [/mouse]
  [mouse] button = "1" func = "mouse_swap"   [/mouse]
  [mouse] button = "2" func = "mouse_tab"    [/mouse]
  [mouse] button = "3" func = "mouse_resize" [/mouse]

[/client]

[rules]

  [rule]
      instance = "tilda"
      class = "Tilda"

      free       = true
      ignore_tag = true
  [/rule]

  [rule]
    instance = "Navigator"
    class = "Firefox"

    tag = 1 
  [/rule]
[/rules]

[keys]

  [key] mod = {"Super"} key = "r" func = "launcher" cmd = "exec" [/key]

  [key] mod = {"Control", "Shift"} key = "q" func = "quit" [/key]
  [key] mod = {"Control", "Shift"} key = "r" func = "reload" [/key]

  # Tag manipulation
  [key] mod = {"Super"} key = "F1" func = "tag_set" cmd = "0" [/key]
  [key] mod = {"Super"} key = "F2" func = "tag_set" cmd = "1" [/key]
  [key] mod = {"Super"} key = "F3" func = "tag_set" cmd = "2" [/key]
  [key] mod = {"Super"} key = "F4" func = "tag_set" cmd = "3" [/key]
  [key] mod = {"Super"} key = "F5" func = "tag_set" cmd = "4" [/key]
  [key] mod = {"Super"} key = "F6" func = "tag_set" cmd = "5" [/key]
  [key] mod = {"Super"} key = "F7" func = "tag_set" cmd = "6" [/key]
  [key] mod = {"Super"} key = "F8" func = "tag_set" cmd = "7" [/key]

  [key] mod = {"Super", "Shift"} key = "F1" func = "tag_client" cmd = "0" [/key]
  [key] mod = {"Super", "Shift"} key = "F2" func = "tag_client" cmd = "1" [/key]
  [key] mod = {"Super", "Shift"} key = "F3" func = "tag_client" cmd = "2" [/key]
  [key] mod = {"Super", "Shift"} key = "F4" func = "tag_client" cmd = "3" [/key]
  [key] mod = {"Super", "Shift"} key = "F5" func = "tag_client" cmd = "4" [/key]
  [key] mod = {"Super", "Shift"} key = "F6" func = "tag_client" cmd = "5" [/key]
  [key] mod = {"Super", "Shift"} key = "F7" func = "tag_client" cmd = "6" [/key]
  [key] mod = {"Super", "Shift"} key = "F8" func = "tag_client" cmd = "7" [/key]

  # tag function: cmd = nameofthetag
  #[key] mod = {"Super"} key = "z" func = "tag" cmd = "2" [/key]

  [key] mod = {"Control", "Shift"} key = "Right" func = "tag_next" [/key]
  [key] mod = {"Control", "Shift"} key = "Left"  func = "tag_prev" [/key]

  [key] mod = {"Alt"} key = "x" func = "client_close" [/key]

  # Focus next / prev client and next / prev tabbed client
  [key] mod = { "Alt" }            key = "Tab" func = "client_focus_next" [/key]
  [key] mod = { "Super" }            key = "Tab" func = "client_focus_next" [/key]
  [key] mod = { "Alt", "Shift" }   key = "Tab" func = "client_focus_prev" [/key]
  [key] mod = { "Super", "Shift" }   key = "Tab" func = "client_focus_prev" [/key]

  # Focus next client with direction
  [key] mod = {"Alt"} key = "Left" func = "client_focus_left"   [/key]
  [key] mod = {"Alt"} key = "Right" func = "client_focus_right"  [/key]
  [key] mod = {"Alt"} key = "Up" func = "client_focus_top"    [/key]
  [key] mod = {"Alt"} key = "Down" func = "client_focus_bottom" [/key]

  # swap next client with direction:
  [key] mod = {"Alt", "Shift"} key = "Left" func = "client_swap_left"   [/key]
  [key] mod = {"Alt", "Shift"} key = "Right" func = "client_swap_right"  [/key]
  [key] mod = {"Alt", "Shift"} key = "Up" func = "client_swap_top"    [/key]
  [key] mod = {"Alt", "Shift"} key = "Down" func = "client_swap_bottom" [/key]

  # Resize selected tiled client with direction
  [key] mod = {"Alt"} key = "KP_4" func = "client_resize_left"   cmd = "20" [/key]
  [key] mod = {"Alt", "Super"} key = "KP_4" func = "client_resize_left"   cmd = "-20" [/key]
  [key] mod = {"Alt"} key = "KP_8" func = "client_resize_right"  cmd = "20" [/key]
  [key] mod = {"Alt", "Super"} key = "KP_8" func = "client_resize_right"  cmd = "-20" [/key]
  [key] mod = {"Alt"} key = "KP_6" func = "client_resize_top"    cmd = "20" [/key]
  [key] mod = {"Alt", "Super"} key = "KP_6" func = "client_resize_top"    cmd = "-20" [/key]
  [key] mod = {"Alt"} key = "KP_2" func = "client_resize_bottom" cmd = "20" [/key]
  [key] mod = {"Alt", "Super"} key = "KP_2" func = "client_resize_bottom" cmd = "-20" [/key]

  # Tabbing command
  [key] mod = {"Alt", "Super"} key = "h" func = "client_tab_left"   [/key]
  [key] mod = {"Alt", "Super"} key = "l" func = "client_tab_right"  [/key]
  [key] mod = {"Alt", "Super"} key = "k" func = "client_tab_top"    [/key]
  [key] mod = {"Alt", "Super"} key = "j" func = "client_tab_bottom" [/key]
  [key] mod = {"Alt"} key = "u" func = "client_untab" [/key]

  # Layout manipulation
  [key] mod = {"Super"}          key = "v" func = "layout_vmirror" [/key]
  [key] mod = {"Super"} key = "h" func = "layout_hmirror" [/key]
  [key] mod = {"Super"}          key = "Left" func = "layout_rotate_right" [/key]
  [key] mod = {"Super"} key = "Right" func = "layout_rotate_left" [/key]

  # Layout set historic travelling function (TESTING)
  [key] mod = {"Super"} key = "Up" func = "layout_prev_set" [/key]
  [key] mod = {"Super"} key = "Down" func = "layout_next_set" [/key]

[/keys]

[bars]
  # s  Statustext (will take available space)
  # y  Systray (can be set only ONE time among all element)
  # l  Launcher (will be expended at launcher use)

  [bar]
     position = 0
     screen = 0
     elements = "tlsy"   # element order in bar
     theme = "default"
  [/bar]

[/bars]

[launchers]

  [launcher]
     name = "exec"
     prompt = " Run:"
     command = "spawn"
     width = 200
  [/launcher]

[/launchers]
